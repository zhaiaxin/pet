<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pandawork.mapper.CartoonMapper">

    <insert id="insert">
        INSERT INTO `t_cartoon`
        ( `name`, `p_name`,`author`, `description`)
        VALUES (#{cartoon.name},#{cartoon.pName},
        #{cartoon.author}, #{cartoon.description}
        )
    </insert>

    <update id="update">
        UPDATE `t_cartoon`
        SET
            `name` = #{cartoon.name},
            `p_name` = #{cartoon.pName},
            `author` = #{cartoon.author},
            `description` = #{cartoon.description}
        WHERE `id` = #{cartoon.id}
    </update>

    <delete id="deleteById">
        DELETE FROM `t_cartoon`
        WHERE `id` = #{id} <!--为什么在update方法中就是cartoon.id而在delete方法中就是id呢。-->
    </delete>

    <select id="countAll" resultType="int">
        SELECT COUNT(1)
        FROM `t_cartoon`
    </select>

    <select id="queryById" resultMap="pw.Cartoon" ><!--pw是啥？ 这里的Cartoon就是实体类  -->
        SELECT id,name,p_name,author,description,last_modified_time
        FROM `t_cartoon`
        WHERE `id` = #{id}
    </select>


    <select id="queryByName" resultMap="pw.Cartoon">
        SELECT id,name,p_name,author,description,last_modified_time
        FROM `t_cartoon`
        WHERE `name` = #{name}
    </select>


    <select id="queryByPName" resultMap="pw.Cartoon">
        SELECT id,name,p_name,author,description,last_modified_time
        FROM `t_cartoon`
        WHERE `p_name` LIKE concat('%',#{pName},'%')
--         '%${cartoonPName}%'模糊查询的第二种方式

    </select>

    <select id="listAll" resultMap="pw.Cartoon">
        SELECT id,name,p_name,author,description,last_modified_time
        FROM `t_cartoon`
    </select>

    <select id="queryByCondition"  resultMap="pw.Cartoon">
        SELECT DISTINCT
        id,name,p_name,author,description,last_modified_time
        FROM `t_cartoon`
        <where>

            <if test="name !=''">
                AND `name` LIKE concat('%',#{name},'%')
            </if>

            <if test="pName !=''">
                AND `p_name` LIKE concat('%',#{pName},'%')
            </if>

            <if test="author !=''">
                AND `author` LIKE concat('%',#{author},'%')
            </if>


        </where>
    </select>

</mapper>